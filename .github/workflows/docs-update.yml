name: Scheduled Documentation Update

on:
  schedule:
    # Run at 2 AM UTC every Monday
    - cron: '0 2 * * 1'
  workflow_dispatch:  # Allow manual trigger
    inputs:
      create_pr:
        description: 'Create PR for changes'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for commit examples
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Configure Git
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
    
    - name: Update documentation
      id: update
      run: |
        echo "üìö Updating all documentation..."
        
        # Capture initial state
        INITIAL_README=$(md5sum README.md | cut -d' ' -f1)
        INITIAL_CLAUDE=$(md5sum CLAUDE.md | cut -d' ' -f1)
        
        # Run full documentation update
        npm run docs
        
        # Check for changes
        FINAL_README=$(md5sum README.md | cut -d' ' -f1)
        FINAL_CLAUDE=$(md5sum CLAUDE.md | cut -d' ' -f1)
        
        if [ "$INITIAL_README" != "$FINAL_README" ] || [ "$INITIAL_CLAUDE" != "$FINAL_CLAUDE" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Documentation updated with changes"
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "‚ÑπÔ∏è No documentation changes needed"
        fi
    
    - name: Update command catalog
      if: steps.update.outputs.has_changes == 'true'
      run: |
        echo "üìñ Updating command catalog..."
        npm run docs catalog
    
    - name: Validate documentation
      if: steps.update.outputs.has_changes == 'true'
      run: |
        echo "üîç Validating updated documentation..."
        npm run docs validate
    
    - name: Create branch and commit
      if: steps.update.outputs.has_changes == 'true'
      id: commit
      run: |
        BRANCH_NAME="docs/auto-update-$(date +%Y%m%d-%H%M%S)"
        echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
        
        git checkout -b $BRANCH_NAME
        
        # Stage changes
        git add README.md CLAUDE.md docs/COMMAND_CATALOG.md
        
        # Create commit message
        COMMIT_MSG="docs: automated documentation update

- Update README.md with current command count
- Refresh commit examples in documentation
- Update command catalog
- Validate all links and references

Automated by GitHub Actions on $(date -u +%Y-%m-%d)"
        
        git commit -m "$COMMIT_MSG"
        
        # Push branch
        git push origin $BRANCH_NAME
    
    - name: Create Pull Request
      if: steps.update.outputs.has_changes == 'true' && (github.event_name == 'schedule' || github.event.inputs.create_pr == 'true')
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.commit.outputs.branch_name }}
        base: main
        title: "üìö Automated Documentation Update"
        body: |
          ## ü§ñ Automated Documentation Update
          
          This PR was automatically generated to update documentation with the latest information.
          
          ### Changes included:
          - ‚úÖ Updated README.md command count badge
          - ‚úÖ Refreshed commit examples from recent history
          - ‚úÖ Updated CLAUDE.md with TDD examples
          - ‚úÖ Synchronized command catalog
          - ‚úÖ Validated all links and references
          
          ### Pre-merge checklist:
          - [ ] Review commit examples for appropriateness
          - [ ] Verify command count is accurate
          - [ ] Check that all links are valid
          - [ ] Ensure examples represent best practices
          
          ---
          *Generated on ${{ steps.commit.outputs.timestamp }} by GitHub Actions*
        labels: |
          documentation
          automated
        assignees: rmurphey
        draft: false
    
    - name: Summary
      if: always()
      run: |
        echo "üìã Documentation Update Summary"
        echo "==============================="
        if [ "${{ steps.update.outputs.has_changes }}" == "true" ]; then
          echo "‚úÖ Documentation updated successfully"
          echo "‚úÖ Changes committed to branch: ${{ steps.commit.outputs.branch_name }}"
          echo "‚úÖ Pull request created for review"
        else
          echo "‚ÑπÔ∏è No documentation updates needed"
          echo "‚úÖ All documentation is up to date"
        fi